- name: Proxmox Post Installation Configuration
  hosts: proxmox
  become: true
  vars:
    pve_version_check: "pve-manager/8"
    
  pre_tasks:
    - name: Check PVE version
      ansible.builtin.shell: "pveversion"
      register: pve_version
      failed_when: pve_version_check not in pve_version.stdout
      changed_when: false

  tasks:
    - name: Configure Debian repository sources
      ansible.builtin.copy:
        dest: /etc/apt/sources.list
        content: |
          deb http://deb.debian.org/debian bookworm main contrib
          deb http://deb.debian.org/debian bookworm-updates main contrib
          deb http://security.debian.org/debian-security bookworm-security main contrib
    
    - name: Disable firmware warning
      ansible.builtin.copy:
        dest: /etc/apt/apt.conf.d/no-bookworm-firmware.conf
        content: 'APT::Get::Update::SourceListWarnings::NonFreeFirmware "false";'

    - name: Disable PVE Enterprise repository
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/pve-enterprise.list
        content: "# deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterprise"

    - name: Enable PVE No-Subscription repository
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/pve-install-repo.list
        content: "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription"

    - name: Configure Ceph repositories
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/ceph.list
        content: |
          # deb https://enterprise.proxmox.com/debian/ceph-quincy bookworm enterprise
          # deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription
          # deb https://enterprise.proxmox.com/debian/ceph-reef bookworm enterprise
          # deb http://download.proxmox.com/debian/ceph-reef bookworm no-subscription

    - name: Add disabled PVE test repository
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/pvetest-for-beta.list
        content: "# deb http://download.proxmox.com/debian/pve bookworm pvetest"

    - name: Remove subscription nag
      ansible.builtin.copy:
        dest: /etc/apt/apt.conf.d/no-nag-script
        content: |
          DPkg::Post-Invoke { "dpkg -V proxmox-widget-toolkit | grep -q '/proxmoxlib\.js$'; if [ \$? -eq 1 ]; then { echo 'Removing subscription nag from UI...'; sed -i '/.*data\.status.*{/{s/\!//;s/active/NoMoreNagging/}' /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js; }; fi"; };

    - name: Reinstall proxmox-widget-toolkit to apply nag removal
      ansible.builtin.apt:
        name: proxmox-widget-toolkit
        state: present
        force: yes

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: dist
        force_apt_get: yes

    - name: Check if high availability is active
      ansible.builtin.service_facts:
      register: services_state

    - name: Disable high availability services for single node
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - pve-ha-lrm
        - pve-ha-crm
        - corosync
      when: services_state.ansible_facts.services['pve-ha-lrm.service'] is defined and
            services_state.ansible_facts.services['pve-ha-lrm.service'].state == 'running'

    - name: Reboot system if required
      ansible.builtin.reboot:
      when: ansible_facts.uptime_seconds <= 3600
